r"""
This file was *autogenerated* from lecture_notes.tex with sagetex.sty
version 2019/01/09 v3.3. It contains the contents of all the
sageexample environments from lecture_notes.tex. You should be able to
doctest this file with "sage -t lecture_notes_doctest.sage".

It is always safe to delete this file; it is not used in typesetting your
document.

Sage example, line 58::

    sage: type(ZZ)
  

Sage example, line 64::

    sage: a,b = ZZ(4), 4
    sage: type(a) == type(b)
    sage: a == b
  

Sage example, line 80::

    sage: 2/3
    sage: type(2/3)
    sage: 1/1
    sage: type(1/1)
  

Sage example, line 98::

    sage: def divides0(a,b):
    ....:     return (a/b).is_integer()
    sage: divides0(5,2)
    sage: divides0(6,3)
  

Sage example, line 130::

    sage: k = 15
    ....: P = Poset((Set([2..k]), lambda a,b: b % a == 0))
  

Sage example, line 145::

    sage: len(P.cover_relations_graph().edges())
  

Sage example, line 217::

    sage: P1 = plot(x/log(x), (2, 200), scale='semilogy', \
    ....:     fill=lambda x: prime_pi(x),fillcolor='red')
    ....: P2 = plot(1.13*log(x), (2, 200), \
    ....:     fill=lambda x: nth_prime(x)/floor(x), fillcolor='red')
    ....: P = graphics_array([P1, P2])
  

Sage example, line 438::

          sage: def divides0(a,b):
          ....:     return (a/b).is_integer()
          sage: def divides1(a,b):
          ....:     return a % b == 0
          sage: def divides2(a,b):
          ....:     return (a//b)*b == a
          sage: def divides3(a,b):
          ....:     return (a/b).denom() == 1
          sage: def divides4(a,b): #there is room to improve
          ....:     if a == 0:
          ....:         return True
          ....:     b *= sign(b)
          ....:     if b == 1:
          ....:         return True
          ....:     q = b
          ....:     a *= sign(a)
          ....:     while q <= a:
          ....:         q <<= 1
          ....:     while a > b:
          ....:         q >>= 1
          ....:         a -= q
          ....:         a *= sign(a)
          ....:     return a == 0 or a == b

          

"""
